Minishell
 - [x] free_all

Lexer
 - [x] Not interpret unclosed quotes
 - [x] Not interpret special characters which are not required by the subject such as\(backslash) or;(semicolon).
 - [x] Handle â€™ (single quote) which should prevent the shell from interpreting the meta-characters in the quoted sequence.
 - [x] Handle"(double quote) which should prevent the shell from interpreting the meta-characters in the quoted sequence except for $ (dollar sign).
 - [x] Handle environment variables ($followed by a sequence of characters) which should expand to their values.
 - [x] Handle$?which should expand to the exit status of the most recently executed foreground pipeline
 - [x] split avant d'expand et de clean les quotes
 - [?] mieux clean les redirs
 - [x] expand after the tokenization
 - [x] clean quotes after the tokenization

Lexer:
    - expand:
        j'ai un char *input;
        j'ai un index i;
        je remplace la var d'env a la position i dans l'input;
        je saute en avant i de la taille de la cle;

Executeur
 - [x] Search and launch the right executable (based on the PATH variable or using a relative or an absolute path)
 - [x] check && is false
 - [x] check how to handle heredoc in redir:
        - [x] if heredoc abort stop the execution (probleme for ||)
        - [x] clean the heredoc generation
 - [x] expand wildcards
 - [ ] Implement pipes:
    - [ ] i should wait for groups and cmds
 - [x] builtins:
    - [ ] which should execute in child or not
    - [x] if tree
    - [x] echo with option-n
    - [x] cd with only a relative or absolute path
    - [x] pwd with no options
    - [x] export with no options
    - [x] unset with no options
    - [x] env with no options or arguments
    - [x] exit with no options
    - [x] have all builtins return T_BOOL
    - [x] update errno

Gestion d'erreur

exit_statuts
 - [x] get exit_status at the end of execution

g_status
 - [x] ctrl-C displays a new prompt on a new line
 - [x] ctrl-D exits the shell
 - [x] ctrl-\ does nothing
 - [x] handle in heredoc status
 - [x] clean the ^ notations
 - [x] handle in execution and new_line
signal,sigaction, sigemptyset, sigadd


prompt:
- [x] Display a prompt when waiting for a new command
- [x] Have a working history
- [x] handle empty input
signal,sigaction, sigemptyset, sigadd


readline, rl_clear_history, rl_on_new_line,rl_replace_line, rl_redisplay, add_history

Tests: