Lexer
 - [x] Not interpret unclosed quotes
 - [x] Not interpret special characters which are not required by the subject such as\(backslash) or;(semicolon).
 - [x] Handle â€™ (single quote) which should prevent the shell from interpreting the meta-characters in the quoted sequence.
 - [x] Handle"(double quote) which should prevent the shell from interpreting the meta-characters in the quoted sequence except for $ (dollar sign).
 - [x] Handle environment variables ($followed by a sequence of characters) which should expand to their values.
 - [x] Handle$?which should expand to the exit status of the most recently executed foreground pipeline

Lexer:
    - expand:
        j'ai un char *input;
        j'ai un index i;
        je remplace la var d'env a la position i dans l'input;
        je saute en avant i de la taille de la cle;

Parser
 - [ ] gestion d'erreur
 - [ ]

Executeur
 - [ ] Search and launch the right executable (based on the PATH variable or using a relative or an absolute path)
 - [ ] Implement pipes
 - [ ] builtins:
    - [ ] echo with option-n
    - [ ] cd with only a relative or absolute path
    - [ ] pwd with no options
    - [ ] export with no options
    - [ ] unset with no options
    - [ ] env with no options or arguments
    - [ ] exit with no options6

Gestion d'erreur

exit_statuts

g_status
 - [x] ctrl-C displays a new prompt on a new line
 - [ ] ctrl-D exits the shell
 - [ ] ctrl-\ does nothing
 - [ ] handle in heredoc status
 - [ ] clean the ^ notations
signal,sigaction, sigemptyset, sigadd


prompt:
- [x] Display a prompt when waiting for a new command
- [x] Have a working history
- [x] handle empty input
- [ ] update prompt in fonction of the working directory
signal,sigaction, sigemptyset, sigadd


readline, rl_clear_history, rl_on_new_line,rl_replace_line, rl_redisplay, add_history